#!/bin/bash
#===============================================================
#
# [ author: Krzysztof Baranski ]
#
#       CARRIER ( uninstall )
#
#===============================================================

db='.db'
setuplock='.setuplock'
project_name='carrier'
build='.build'
source='source'
main_class='Application'
commons_dir='../commons'
commons_jar='commons.jar'
project_jar=$project_name.jar

echo "
---------------------------------------------------
-                UNINSTALL CARRIER                -
---------------------------------------------------"

#--------------------------------------------------------------| remove setup lock
echo "Removing setup lock..."
rm -f $setuplock
if [ $? -eq 0 ]
then
	echo "OK!"
else
	echo "Error!"
fi

#--------------------------------------------------------------| remove database
dbname=$( sed -n -e '/database_name/s/^.*=\(.*\)$/\1/p' config.properties )
echo "Database name: $dbname"
if [ "$dbname" != "" ] && [ -f database/$dbname ]
then
	echo "Removing database..."
	rm -f database/$dbname
	if [ $? -eq 0 ]
	then
		echo "OK!"
	else
		echo "Error!"
	fi
fi

#--------------------------------------------------------------| remove timetable
echo "Removing timetable..."
sed -i database/create.sql -e '/^insert/d'
if [ $? -eq 0 ]
then
	echo "OK!"
else
	echo "Error!"
fi

#--------------------------------------------------------------| reset config file
echo "Reseting config file..."
sed -i config.properties -e '/carrier_name/ccarrier_name='
sed -i config.properties -e '/server_port/cserver_port='
sed -i config.properties -e '/database_name/cdatabase_name='

#--------------------------------------------------------------| remove jars
echo "Removing jars..."
rm -vf libs/$commons_jar
rm -vf $project_jar

#--------------------------------------------------------------| remove logs
if [ -d logs ]
then
	echo "Removing logs..."
	rm -rvf logs
fi

echo "---------------------------------------------------
"
